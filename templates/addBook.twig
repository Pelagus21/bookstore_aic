<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Book</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <style>
        .errLabel {
            display: none;
            color: orangered;
            margin-top: 10px
        }
        .hoverable:hover {
            background-color: #96afd9;
        }

        .hoverable {
            margin: 5px;
        }
        .lst {
            background-color: white;
            resize: vertical;
            height: 120px;
            overflow: auto;
        }
        .list-col {
            display: inline;
        }
        .lg-checkbox {
            transform: scale(1.5);
        }

    </style>
</head>

<body>

{% include '../views/adminNavBar.twig'%}

<div class="container" style="margin-top: 50px; max-width: 700px; height: auto; min-height: 100% !important; border: 1px solid #9C9C9C; background-color: #EAEAEA;">
    <div class="row justify-content-center align-items-center">
        <div class="col-md-12">
            <form class="form" id="addForm" onsubmit="formSubmit(event, this);">
                <h3 style="margin-top: 20px;" class="text-center text-info">Add Book:</h3>
                <div class="form-group" style="margin-top: 10px">
                    <label class="h6" for="username" class="text-info">Book name: *</label>
                    <br>
                    <input type="text" name="book_name" class="form-control" placeholder="Enter book name">
                    <p id="bookNameBlankErr" class="errLabel">Book name cannot be blank!</p>
                </div>
                <div class="form-group">
                    <label class="h6" for="description" class="text-info">Description: *</label>
                    <br>
                    <textarea name="description"
                              class="form-control"
                              rows="4"
                              placeholder="Enter book description"></textarea>
                    <p id="descriptionBlankErr" class="errLabel">Description cannot be blank!</p>
                </div>
                <div class="form-group">
                    <label class="h6" for="url" class="text-info">Image URL:</label>
                    <br>
                    <input type="url" name="url" class="form-control" placeholder="Enter image url (optional)">
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-4">
                            <label class="h6" for="price" class="text-info">Price: *</label>
                            <br>
                            <input type="number" id="priceInput" min="0.00" step="0.01" name="price" class="form-control" value="0.00" placeholder="Enter book price">
                            <p id="priceBlankErr" class="errLabel">Fill price field!</p>
                        </div>
                        <div class="col-md-2"></div>
                        <div class="col-md-4">
                            <label class="h6" for="year" class="text-info">Publishing year:</label>
                            <br>
                            <input type="number" id="yearInput" min="0" name="year" class="form-control" placeholder="Enter publishing year (optional)">
                        </div>
                        <div class="col-md-2"></div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-4">
                            <label class="h6" for="copies_numb" class="text-info">Number of copies: *</label>
                            <br>
                            <input type="number" id="copiesInput" min="0" name="copies_numb" class="form-control" value="0" placeholder="Enter number of copies">
                            <p id="copiesBlankErr" class="errLabel">Fill copies number field!</p>
                        </div>
                        <div class="col-md-8"></div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="h6" class="text-info">Authors:</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <ul id="authorsList" class="list-group lst">

                                    </ul>
                                </div>
                            </div>
                            <div class="row" style="margin-top: 5px">
                                <div class="col-md-12">
                                    <button type="button"
                                            class="btn btn-primary btn-sm"
                                            onclick="deleteAuthor()"
                                            style="margin-right: 2px">Delete</button>
                                    <button type="button"
                                            class="btn btn-primary btn-sm"
                                            style="margin-left: 2px"
                                            onclick="addAuthorsClicked();"
                                            data-toggle="modal"
                                            data-target="#addModal">Add</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="h6" class="text-info">Genres:</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <ul id="genresList" class="list-group lst">

                                    </ul>
                                </div>
                            </div>
                            <div class="row" style="margin-top: 5px">
                                <div class="col-md-12">
                                    <button type="button"
                                            class="btn btn-primary btn-sm"
                                            onclick="deleteGenre()"
                                            style="margin-right: 2px">Delete</button>
                                    <button type="button"
                                            class="btn btn-primary btn-sm"
                                            style="margin-left: 2px"
                                            onclick="addGenresClicked();"
                                            data-toggle="modal"
                                            data-target="#addModal">Add</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group" style="width:100%; margin-top: 10px">
                    <a href="/adminBooks" class="btn btn-primary btn-md">Back</a>
                    <button type="submit" class="btn btn-primary btn-md" style="float: right;">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <ul id="modalList" class="list-group">

                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" id="addModalBtn" class="btn btn-primary" data-dismiss="modal" onclick="modalAddClicked();">Add</button>
            </div>
        </div>
    </div>
</div>


<script>
    let lastAuthorClickedId = -1;
    let lastGenreClickedId = -1;

    let allAuthorMap = {
    {% for auth in all_authors %}
    {{ auth.Id }} : '{{ auth.First_name }} {{ auth.Surname }}',
    {% endfor %}
    };

    let allGenreMap = {
    {% for genr in all_genres %}
    {{ genr.Id }} : '{{ genr.Genre_name }}',
    {% endfor %}
    };

    setMaxYear();

    function modalAddClicked() {
        let modl = document.getElementById('modalList');
        let elemsList = modl.getElementsByTagName("li");
        let forAuthors = modl.parentElement.id === 'authorsDiv';
        let targetList = forAuthors ? document.getElementById('authorsList') :
            document.getElementById('genresList');
        for(let i = 0; i < elemsList.length; i++) {
            let checkbox = document.getElementById('check' + i);
            if(checkbox.checked) {
                let elemId = checkbox.value;
                let li = document.createElement("li");
                if(forAuthors)
                    li.id = 'a' + elemId;
                else
                    li.id = 'g' + elemId;
                li.classList.add("list-group-item", "hoverable");
                li.onclick = forAuthors ? () => {authorClicked(parseInt(elemId))}
                    : () => {genreClicked(parseInt(elemId))};
                let text = document.createTextNode(forAuthors ? allAuthorMap[elemId] : allGenreMap[elemId]);
                li.appendChild(text);
                targetList.appendChild(li);
            }
        }
    }

    function addAuthorsClicked() {
        document.getElementById("modalTitle").innerText = "Add authors: ";
        let modl = document.getElementById("modalList");
        modl.innerHTML = '';
        modl.parentElement.id = 'authorsDiv';
        let addbtn = document.getElementById("addModalBtn");
        addbtn.classList.remove("disabled");
        addbtn.setAttribute('data-dismiss', 'modal');
        let authorIds = [];
        let authorsList = document.getElementById('authorsList').getElementsByTagName("li");
        for (let i = 0; i < authorsList.length; i++) {
            authorIds.push(parseInt(authorsList[i].id.substr(1)));
        }
        let diffArr = getDiffArray(Object.keys(allAuthorMap), authorIds);
        if(!diffArr.length) {
            let text =  document.createTextNode("No available authors");
            addbtn.classList.add("disabled");
            addbtn.removeAttribute('data-dismiss');
            return modl.appendChild(text);
        }
        fillModalUl(diffArr, allAuthorMap);
    }

    function addGenresClicked() {
        document.getElementById("modalTitle").innerText = "Add genres: ";
        let modl = document.getElementById("modalList");
        modl.innerHTML = '';
        modl.parentElement.id = 'genresDiv';
        let addbtn = document.getElementById("addModalBtn");
        addbtn.classList.remove("disabled");
        addbtn.setAttribute('data-dismiss', 'modal');
        let genreIds = [];
        let genresList = document.getElementById('genresList').getElementsByTagName("li");
        for (let i = 0; i < genresList.length; i++) {
            genreIds.push(parseInt(genresList[i].id.substr(1)));
        }
        let diffArr = getDiffArray(Object.keys(allGenreMap), genreIds);
        if(!diffArr.length) {
            let text =  document.createTextNode("No available genres");
            addbtn.classList.add("disabled");
            addbtn.removeAttribute('data-dismiss');
            return modl.appendChild(text);
        }
        fillModalUl(diffArr, allGenreMap);
    }

    function fillModalUl(diff, allElemsMap) {
        let modalList = document.getElementById("modalList");
        for(let i = 0; i < diff.length; i++) {
            let li = document.createElement("li");
            li.className = "list-group-item";

            let row = document.createElement("div");
            row.className = "row";

            let chkBoxCol = document.createElement("div");
            chkBoxCol.classList.add("col-md-3", "list-col");

            let formCheck = document.createElement("form");
            formCheck.className = "form-check";

            let checkBox = document.createElement("input");
            checkBox.type = "checkbox";
            checkBox.value = diff[i];
            checkBox.classList.add("form-check-input", "lg-checkbox");
            checkBox.id = 'check' + i;

            formCheck.appendChild(checkBox);
            chkBoxCol.appendChild(formCheck);
            row.appendChild(chkBoxCol);

            let nameCol = document.createElement("div");
            nameCol.classList.add("col-md-9", "list-col");

            let h5 = document.createElement("h5");
            let textNode = document.createTextNode(allElemsMap[diff[i]]);
            h5.appendChild(textNode);

            nameCol.appendChild(h5);
            row.appendChild(nameCol);
            li.appendChild(row);
            modalList.appendChild(li);
        }
    }

    function getDiffArray(allArr, addedArr) {
        let res = [];
        for(let i = 0; i < allArr.length; i++) {
            let val = parseInt(allArr[i]);
            if(!addedArr.includes(val))
                res.push(val);
        }
        return res;
    }

    function setMaxYear() {
        document.getElementById('yearInput').setAttribute("max", new Date().getFullYear().toString());
    }

    function authorClicked(id) {
        if(lastAuthorClickedId != -1) {
            document.getElementById('a' + lastAuthorClickedId.toString()).style.removeProperty('background-color');
        }
        if(lastAuthorClickedId != id) {
            document.getElementById('a' + id.toString()).style = "background-color: #1165ed";
            lastAuthorClickedId = id;
        } else
            lastAuthorClickedId = -1;
    }

    function deleteAuthor() {
        if(lastAuthorClickedId != -1) {
            let item = document.getElementById('a' + lastAuthorClickedId.toString());
            item.parentNode.removeChild(item);
            lastAuthorClickedId = -1;
        }
    }

    function genreClicked(id) {
        if(lastGenreClickedId != -1) {
            document.getElementById('g' + lastGenreClickedId.toString()).style.removeProperty('background-color');
        }
        if(lastGenreClickedId != id) {
            document.getElementById('g' + id.toString()).style = "background-color: #1165ed";
            lastGenreClickedId = id;
        } else
            lastGenreClickedId = -1;
    }

    function deleteGenre() {
        if(lastGenreClickedId != -1) {
            let item = document.getElementById('g' + lastGenreClickedId.toString());
            item.parentNode.removeChild(item);
            lastGenreClickedId = -1;
        }
    }

    function formSubmit(event, form) {
        let authorIds = [];
        let genresIds = [];
        let authorsList = document.getElementById('authorsList').getElementsByTagName("li");
        let genresList = document.getElementById('genresList').getElementsByTagName("li");
        for (let i = 0; i < authorsList.length; i++) {
            authorIds.push(parseInt(authorsList[i].id.substr(1)));
        }
        for (let i = 0; i < genresList.length; i++) {
            genresIds.push(parseInt(genresList[i].id.substr(1)));
        }
        let b_name = form.book_name.value;
        let descr = form.description.value;
        let copies_n = form.copies_numb.value;
        let price_n = form.price.value;
        if(b_name === '') {
            document.getElementById('bookNameBlankErr').style.display = "initial";
        }
        if(descr === '') {
            document.getElementById('descriptionBlankErr').style.display = "initial";
        }
        if(copies_n === '') {
            document.getElementById('copiesBlankErr').style.display = "initial";
        }
        if(price_n === '') {
            document.getElementById('priceBlankErr').style.display = "initial";
        }
        if (descr === '' || b_name === '' || copies_n === '' || price_n === '') {
            return event.preventDefault();
        }
        event.preventDefault();
        fetch('/addBook', {
            method: 'POST',
            redirect: 'follow',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
                "data": {
                    "book_name": form.book_name.value,
                    "description": form.description.value,
                    "url": (form.url.value.length) ? form.url.value : undefined,
                    "price": parseFloat(form.price.value),
                    "copies_numb": parseInt(form.copies_numb.value),
                    "year": (form.year.value.length) ? parseInt(form.year.value) : undefined,
                    "authors_ids": (authorIds.length) ? authorIds : undefined,
                    "genres_ids": (genresIds.length) ? genresIds : undefined
                }
            })
        })
            .then(
                (result) => {
                    console.log(result);
                    window.location.href = '/adminBooks';
                }
            );
    }
</script>
</body>
</html>